#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EPowerGenerateLicense
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="EPOWERLICENSE")]
	public partial class LicenseDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertTBL_COLOR_LICENSE(TBL_COLOR_LICENSE instance);
    partial void UpdateTBL_COLOR_LICENSE(TBL_COLOR_LICENSE instance);
    partial void DeleteTBL_COLOR_LICENSE(TBL_COLOR_LICENSE instance);
    partial void InsertTBL_COMPANY(TBL_COMPANY instance);
    partial void UpdateTBL_COMPANY(TBL_COMPANY instance);
    partial void DeleteTBL_COMPANY(TBL_COMPANY instance);
    partial void InsertTBL_LICENSE_TYPE(TBL_LICENSE_TYPE instance);
    partial void UpdateTBL_LICENSE_TYPE(TBL_LICENSE_TYPE instance);
    partial void DeleteTBL_LICENSE_TYPE(TBL_LICENSE_TYPE instance);
    partial void InsertTBL_SCHEDULE(TBL_SCHEDULE instance);
    partial void UpdateTBL_SCHEDULE(TBL_SCHEDULE instance);
    partial void DeleteTBL_SCHEDULE(TBL_SCHEDULE instance);
    partial void InsertTBL_SEASON(TBL_SEASON instance);
    partial void UpdateTBL_SEASON(TBL_SEASON instance);
    partial void DeleteTBL_SEASON(TBL_SEASON instance);
    partial void InsertTBL_USER(TBL_USER instance);
    partial void UpdateTBL_USER(TBL_USER instance);
    partial void DeleteTBL_USER(TBL_USER instance);
    partial void InsertTBL_UTILITY(TBL_UTILITY instance);
    partial void UpdateTBL_UTILITY(TBL_UTILITY instance);
    partial void DeleteTBL_UTILITY(TBL_UTILITY instance);
    partial void InsertTBL_LICENSE_GENERATE(TBL_LICENSE_GENERATE instance);
    partial void UpdateTBL_LICENSE_GENERATE(TBL_LICENSE_GENERATE instance);
    partial void DeleteTBL_LICENSE_GENERATE(TBL_LICENSE_GENERATE instance);
    partial void InsertTBL_LICENSE(TBL_LICENSE instance);
    partial void UpdateTBL_LICENSE(TBL_LICENSE instance);
    partial void DeleteTBL_LICENSE(TBL_LICENSE instance);
    #endregion
		
		public LicenseDataContext() : 
				base(global::EPowerGenerateLicense.Properties.Settings.Default.EPOWERLICENSEConnectionString3, mappingSource)
		{
			OnCreated();
		}
		
		public LicenseDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LicenseDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LicenseDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LicenseDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<TBL_COLOR_LICENSE> TBL_COLOR_LICENSEs
		{
			get
			{
				return this.GetTable<TBL_COLOR_LICENSE>();
			}
		}
		
		public System.Data.Linq.Table<TBL_COMPANY> TBL_COMPANies
		{
			get
			{
				return this.GetTable<TBL_COMPANY>();
			}
		}
		
		public System.Data.Linq.Table<TBL_LICENSE_TYPE> TBL_LICENSE_TYPEs
		{
			get
			{
				return this.GetTable<TBL_LICENSE_TYPE>();
			}
		}
		
		public System.Data.Linq.Table<TBL_SCHEDULE> TBL_SCHEDULEs
		{
			get
			{
				return this.GetTable<TBL_SCHEDULE>();
			}
		}
		
		public System.Data.Linq.Table<TBL_SEASON> TBL_SEASONs
		{
			get
			{
				return this.GetTable<TBL_SEASON>();
			}
		}
		
		public System.Data.Linq.Table<TBL_USER> TBL_USERs
		{
			get
			{
				return this.GetTable<TBL_USER>();
			}
		}
		
		public System.Data.Linq.Table<TBL_UTILITY> TBL_UTILITies
		{
			get
			{
				return this.GetTable<TBL_UTILITY>();
			}
		}
		
		public System.Data.Linq.Table<TBL_LICENSE_GENERATE> TBL_LICENSE_GENERATEs
		{
			get
			{
				return this.GetTable<TBL_LICENSE_GENERATE>();
			}
		}
		
		public System.Data.Linq.Table<TBL_LICENSE> TBL_LICENSEs
		{
			get
			{
				return this.GetTable<TBL_LICENSE>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.RUN_SHOW_SEASON_AVAILABLE")]
		public ISingleResult<RUN_SHOW_SEASON_AVAILABLEResult> RUN_SHOW_SEASON_AVAILABLE()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<RUN_SHOW_SEASON_AVAILABLEResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.RUN_SHOW_ALL_SEASON")]
		public ISingleResult<RUN_SHOW_ALL_SEASONResult> RUN_SHOW_ALL_SEASON()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<RUN_SHOW_ALL_SEASONResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.RUN_SHOW_NUMBER_AVAILABLE")]
		public ISingleResult<RUN_SHOW_NUMBER_AVAILABLEResult> RUN_SHOW_NUMBER_AVAILABLE([global::System.Data.Linq.Mapping.ParameterAttribute(Name="SEASOND_ID", DbType="Int")] System.Nullable<int> sEASOND_ID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), sEASOND_ID);
			return ((ISingleResult<RUN_SHOW_NUMBER_AVAILABLEResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.RUN_SHOW_HISTORY_SURVEY")]
		public ISingleResult<RUN_SHOW_HISTORY_SURVEYResult> RUN_SHOW_HISTORY_SURVEY([global::System.Data.Linq.Mapping.ParameterAttribute(Name="SEASON_ID", DbType="Int")] System.Nullable<int> sEASON_ID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), sEASON_ID);
			return ((ISingleResult<RUN_SHOW_HISTORY_SURVEYResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.RUN_SHOW_GENERATE_BY_CREATE_ON")]
		public ISingleResult<RUN_SHOW_GENERATE_BY_CREATE_ONResult> RUN_SHOW_GENERATE_BY_CREATE_ON([global::System.Data.Linq.Mapping.ParameterAttribute(Name="CREATE_ON", DbType="DateTime")] System.Nullable<System.DateTime> cREATE_ON)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), cREATE_ON);
			return ((ISingleResult<RUN_SHOW_GENERATE_BY_CREATE_ONResult>)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TBL_COLOR_LICENSE")]
	public partial class TBL_COLOR_LICENSE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _COLOR_ID;
		
		private string _COLOR_NAME;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCOLOR_IDChanging(int value);
    partial void OnCOLOR_IDChanged();
    partial void OnCOLOR_NAMEChanging(string value);
    partial void OnCOLOR_NAMEChanged();
    #endregion
		
		public TBL_COLOR_LICENSE()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_COLOR_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int COLOR_ID
		{
			get
			{
				return this._COLOR_ID;
			}
			set
			{
				if ((this._COLOR_ID != value))
				{
					this.OnCOLOR_IDChanging(value);
					this.SendPropertyChanging();
					this._COLOR_ID = value;
					this.SendPropertyChanged("COLOR_ID");
					this.OnCOLOR_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_COLOR_NAME", DbType="NVarChar(50)")]
		public string COLOR_NAME
		{
			get
			{
				return this._COLOR_NAME;
			}
			set
			{
				if ((this._COLOR_NAME != value))
				{
					this.OnCOLOR_NAMEChanging(value);
					this.SendPropertyChanging();
					this._COLOR_NAME = value;
					this.SendPropertyChanged("COLOR_NAME");
					this.OnCOLOR_NAMEChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TBL_COMPANY")]
	public partial class TBL_COMPANY : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _COMPANY_ID;
		
		private string _COMPANY_NAME;
		
		private string _ADDRESS;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCOMPANY_IDChanging(int value);
    partial void OnCOMPANY_IDChanged();
    partial void OnCOMPANY_NAMEChanging(string value);
    partial void OnCOMPANY_NAMEChanged();
    partial void OnADDRESSChanging(string value);
    partial void OnADDRESSChanged();
    #endregion
		
		public TBL_COMPANY()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_COMPANY_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int COMPANY_ID
		{
			get
			{
				return this._COMPANY_ID;
			}
			set
			{
				if ((this._COMPANY_ID != value))
				{
					this.OnCOMPANY_IDChanging(value);
					this.SendPropertyChanging();
					this._COMPANY_ID = value;
					this.SendPropertyChanged("COMPANY_ID");
					this.OnCOMPANY_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_COMPANY_NAME", DbType="NVarChar(250)")]
		public string COMPANY_NAME
		{
			get
			{
				return this._COMPANY_NAME;
			}
			set
			{
				if ((this._COMPANY_NAME != value))
				{
					this.OnCOMPANY_NAMEChanging(value);
					this.SendPropertyChanging();
					this._COMPANY_NAME = value;
					this.SendPropertyChanged("COMPANY_NAME");
					this.OnCOMPANY_NAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ADDRESS", DbType="NVarChar(250)")]
		public string ADDRESS
		{
			get
			{
				return this._ADDRESS;
			}
			set
			{
				if ((this._ADDRESS != value))
				{
					this.OnADDRESSChanging(value);
					this.SendPropertyChanging();
					this._ADDRESS = value;
					this.SendPropertyChanged("ADDRESS");
					this.OnADDRESSChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TBL_LICENSE_TYPE")]
	public partial class TBL_LICENSE_TYPE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LICENSE_TYPE_ID;
		
		private int _LICENSE_ID;
		
		private int _PERCENTAGE;
		
		private int _COLOR_ID;
		
		private System.DateTime _CREATE_DATE;
		
		private string _CREATE_BY;
		
		private bool _IS_ACTIVE;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLICENSE_TYPE_IDChanging(int value);
    partial void OnLICENSE_TYPE_IDChanged();
    partial void OnLICENSE_IDChanging(int value);
    partial void OnLICENSE_IDChanged();
    partial void OnPERCENTAGEChanging(int value);
    partial void OnPERCENTAGEChanged();
    partial void OnCOLOR_IDChanging(int value);
    partial void OnCOLOR_IDChanged();
    partial void OnCREATE_DATEChanging(System.DateTime value);
    partial void OnCREATE_DATEChanged();
    partial void OnCREATE_BYChanging(string value);
    partial void OnCREATE_BYChanged();
    partial void OnIS_ACTIVEChanging(bool value);
    partial void OnIS_ACTIVEChanged();
    #endregion
		
		public TBL_LICENSE_TYPE()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LICENSE_TYPE_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int LICENSE_TYPE_ID
		{
			get
			{
				return this._LICENSE_TYPE_ID;
			}
			set
			{
				if ((this._LICENSE_TYPE_ID != value))
				{
					this.OnLICENSE_TYPE_IDChanging(value);
					this.SendPropertyChanging();
					this._LICENSE_TYPE_ID = value;
					this.SendPropertyChanged("LICENSE_TYPE_ID");
					this.OnLICENSE_TYPE_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LICENSE_ID", DbType="Int NOT NULL")]
		public int LICENSE_ID
		{
			get
			{
				return this._LICENSE_ID;
			}
			set
			{
				if ((this._LICENSE_ID != value))
				{
					this.OnLICENSE_IDChanging(value);
					this.SendPropertyChanging();
					this._LICENSE_ID = value;
					this.SendPropertyChanged("LICENSE_ID");
					this.OnLICENSE_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PERCENTAGE", DbType="Int NOT NULL")]
		public int PERCENTAGE
		{
			get
			{
				return this._PERCENTAGE;
			}
			set
			{
				if ((this._PERCENTAGE != value))
				{
					this.OnPERCENTAGEChanging(value);
					this.SendPropertyChanging();
					this._PERCENTAGE = value;
					this.SendPropertyChanged("PERCENTAGE");
					this.OnPERCENTAGEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_COLOR_ID", DbType="Int NOT NULL")]
		public int COLOR_ID
		{
			get
			{
				return this._COLOR_ID;
			}
			set
			{
				if ((this._COLOR_ID != value))
				{
					this.OnCOLOR_IDChanging(value);
					this.SendPropertyChanging();
					this._COLOR_ID = value;
					this.SendPropertyChanged("COLOR_ID");
					this.OnCOLOR_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CREATE_DATE", DbType="DateTime NOT NULL")]
		public System.DateTime CREATE_DATE
		{
			get
			{
				return this._CREATE_DATE;
			}
			set
			{
				if ((this._CREATE_DATE != value))
				{
					this.OnCREATE_DATEChanging(value);
					this.SendPropertyChanging();
					this._CREATE_DATE = value;
					this.SendPropertyChanged("CREATE_DATE");
					this.OnCREATE_DATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CREATE_BY", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CREATE_BY
		{
			get
			{
				return this._CREATE_BY;
			}
			set
			{
				if ((this._CREATE_BY != value))
				{
					this.OnCREATE_BYChanging(value);
					this.SendPropertyChanging();
					this._CREATE_BY = value;
					this.SendPropertyChanged("CREATE_BY");
					this.OnCREATE_BYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IS_ACTIVE", DbType="Bit NOT NULL")]
		public bool IS_ACTIVE
		{
			get
			{
				return this._IS_ACTIVE;
			}
			set
			{
				if ((this._IS_ACTIVE != value))
				{
					this.OnIS_ACTIVEChanging(value);
					this.SendPropertyChanging();
					this._IS_ACTIVE = value;
					this.SendPropertyChanged("IS_ACTIVE");
					this.OnIS_ACTIVEChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TBL_SCHEDULE")]
	public partial class TBL_SCHEDULE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SCHEDULE_ID;
		
		private int _LICENSE_ID;
		
		private int _SEASON_ID;
		
		private string _NOTE;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSCHEDULE_IDChanging(int value);
    partial void OnSCHEDULE_IDChanged();
    partial void OnLICENSE_IDChanging(int value);
    partial void OnLICENSE_IDChanged();
    partial void OnSEASON_IDChanging(int value);
    partial void OnSEASON_IDChanged();
    partial void OnNOTEChanging(string value);
    partial void OnNOTEChanged();
    #endregion
		
		public TBL_SCHEDULE()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SCHEDULE_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SCHEDULE_ID
		{
			get
			{
				return this._SCHEDULE_ID;
			}
			set
			{
				if ((this._SCHEDULE_ID != value))
				{
					this.OnSCHEDULE_IDChanging(value);
					this.SendPropertyChanging();
					this._SCHEDULE_ID = value;
					this.SendPropertyChanged("SCHEDULE_ID");
					this.OnSCHEDULE_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LICENSE_ID", DbType="Int NOT NULL")]
		public int LICENSE_ID
		{
			get
			{
				return this._LICENSE_ID;
			}
			set
			{
				if ((this._LICENSE_ID != value))
				{
					this.OnLICENSE_IDChanging(value);
					this.SendPropertyChanging();
					this._LICENSE_ID = value;
					this.SendPropertyChanged("LICENSE_ID");
					this.OnLICENSE_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SEASON_ID", DbType="Int NOT NULL")]
		public int SEASON_ID
		{
			get
			{
				return this._SEASON_ID;
			}
			set
			{
				if ((this._SEASON_ID != value))
				{
					this.OnSEASON_IDChanging(value);
					this.SendPropertyChanging();
					this._SEASON_ID = value;
					this.SendPropertyChanged("SEASON_ID");
					this.OnSEASON_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NOTE", DbType="NVarChar(150)")]
		public string NOTE
		{
			get
			{
				return this._NOTE;
			}
			set
			{
				if ((this._NOTE != value))
				{
					this.OnNOTEChanging(value);
					this.SendPropertyChanging();
					this._NOTE = value;
					this.SendPropertyChanged("NOTE");
					this.OnNOTEChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TBL_SEASON")]
	public partial class TBL_SEASON : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SEASON_ID;
		
		private string _SEASON_NAME;
		
		private System.DateTime _CREATE_DATE;
		
		private string _CREATE_BY;
		
		private string _NOTE;
		
		private System.Nullable<bool> _IS_ACTIVE;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSEASON_IDChanging(int value);
    partial void OnSEASON_IDChanged();
    partial void OnSEASON_NAMEChanging(string value);
    partial void OnSEASON_NAMEChanged();
    partial void OnCREATE_DATEChanging(System.DateTime value);
    partial void OnCREATE_DATEChanged();
    partial void OnCREATE_BYChanging(string value);
    partial void OnCREATE_BYChanged();
    partial void OnNOTEChanging(string value);
    partial void OnNOTEChanged();
    partial void OnIS_ACTIVEChanging(System.Nullable<bool> value);
    partial void OnIS_ACTIVEChanged();
    #endregion
		
		public TBL_SEASON()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SEASON_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SEASON_ID
		{
			get
			{
				return this._SEASON_ID;
			}
			set
			{
				if ((this._SEASON_ID != value))
				{
					this.OnSEASON_IDChanging(value);
					this.SendPropertyChanging();
					this._SEASON_ID = value;
					this.SendPropertyChanged("SEASON_ID");
					this.OnSEASON_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SEASON_NAME", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string SEASON_NAME
		{
			get
			{
				return this._SEASON_NAME;
			}
			set
			{
				if ((this._SEASON_NAME != value))
				{
					this.OnSEASON_NAMEChanging(value);
					this.SendPropertyChanging();
					this._SEASON_NAME = value;
					this.SendPropertyChanged("SEASON_NAME");
					this.OnSEASON_NAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CREATE_DATE", DbType="DateTime NOT NULL")]
		public System.DateTime CREATE_DATE
		{
			get
			{
				return this._CREATE_DATE;
			}
			set
			{
				if ((this._CREATE_DATE != value))
				{
					this.OnCREATE_DATEChanging(value);
					this.SendPropertyChanging();
					this._CREATE_DATE = value;
					this.SendPropertyChanged("CREATE_DATE");
					this.OnCREATE_DATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CREATE_BY", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CREATE_BY
		{
			get
			{
				return this._CREATE_BY;
			}
			set
			{
				if ((this._CREATE_BY != value))
				{
					this.OnCREATE_BYChanging(value);
					this.SendPropertyChanging();
					this._CREATE_BY = value;
					this.SendPropertyChanged("CREATE_BY");
					this.OnCREATE_BYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NOTE", DbType="NVarChar(250)")]
		public string NOTE
		{
			get
			{
				return this._NOTE;
			}
			set
			{
				if ((this._NOTE != value))
				{
					this.OnNOTEChanging(value);
					this.SendPropertyChanging();
					this._NOTE = value;
					this.SendPropertyChanged("NOTE");
					this.OnNOTEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IS_ACTIVE", DbType="Bit")]
		public System.Nullable<bool> IS_ACTIVE
		{
			get
			{
				return this._IS_ACTIVE;
			}
			set
			{
				if ((this._IS_ACTIVE != value))
				{
					this.OnIS_ACTIVEChanging(value);
					this.SendPropertyChanging();
					this._IS_ACTIVE = value;
					this.SendPropertyChanged("IS_ACTIVE");
					this.OnIS_ACTIVEChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TBL_USER")]
	public partial class TBL_USER : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _USER_ID;
		
		private string _USERNAME;
		
		private string _PASSWORD;
		
		private bool _IS_ACTIVE;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUSER_IDChanging(int value);
    partial void OnUSER_IDChanged();
    partial void OnUSERNAMEChanging(string value);
    partial void OnUSERNAMEChanged();
    partial void OnPASSWORDChanging(string value);
    partial void OnPASSWORDChanged();
    partial void OnIS_ACTIVEChanging(bool value);
    partial void OnIS_ACTIVEChanged();
    #endregion
		
		public TBL_USER()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USER_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int USER_ID
		{
			get
			{
				return this._USER_ID;
			}
			set
			{
				if ((this._USER_ID != value))
				{
					this.OnUSER_IDChanging(value);
					this.SendPropertyChanging();
					this._USER_ID = value;
					this.SendPropertyChanged("USER_ID");
					this.OnUSER_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USERNAME", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string USERNAME
		{
			get
			{
				return this._USERNAME;
			}
			set
			{
				if ((this._USERNAME != value))
				{
					this.OnUSERNAMEChanging(value);
					this.SendPropertyChanging();
					this._USERNAME = value;
					this.SendPropertyChanged("USERNAME");
					this.OnUSERNAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PASSWORD", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string PASSWORD
		{
			get
			{
				return this._PASSWORD;
			}
			set
			{
				if ((this._PASSWORD != value))
				{
					this.OnPASSWORDChanging(value);
					this.SendPropertyChanging();
					this._PASSWORD = value;
					this.SendPropertyChanged("PASSWORD");
					this.OnPASSWORDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IS_ACTIVE", DbType="Bit NOT NULL")]
		public bool IS_ACTIVE
		{
			get
			{
				return this._IS_ACTIVE;
			}
			set
			{
				if ((this._IS_ACTIVE != value))
				{
					this.OnIS_ACTIVEChanging(value);
					this.SendPropertyChanging();
					this._IS_ACTIVE = value;
					this.SendPropertyChanged("IS_ACTIVE");
					this.OnIS_ACTIVEChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TBL_UTILITY")]
	public partial class TBL_UTILITY : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UTILITY_ID;
		
		private string _UTILITY_NAME;
		
		private string _UTILITY_DESCRIPTION;
		
		private System.Nullable<int> _UTILITY_VALUE;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUTILITY_IDChanging(int value);
    partial void OnUTILITY_IDChanged();
    partial void OnUTILITY_NAMEChanging(string value);
    partial void OnUTILITY_NAMEChanged();
    partial void OnUTILITY_DESCRIPTIONChanging(string value);
    partial void OnUTILITY_DESCRIPTIONChanged();
    partial void OnUTILITY_VALUEChanging(System.Nullable<int> value);
    partial void OnUTILITY_VALUEChanged();
    #endregion
		
		public TBL_UTILITY()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UTILITY_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int UTILITY_ID
		{
			get
			{
				return this._UTILITY_ID;
			}
			set
			{
				if ((this._UTILITY_ID != value))
				{
					this.OnUTILITY_IDChanging(value);
					this.SendPropertyChanging();
					this._UTILITY_ID = value;
					this.SendPropertyChanged("UTILITY_ID");
					this.OnUTILITY_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UTILITY_NAME", DbType="NVarChar(50)")]
		public string UTILITY_NAME
		{
			get
			{
				return this._UTILITY_NAME;
			}
			set
			{
				if ((this._UTILITY_NAME != value))
				{
					this.OnUTILITY_NAMEChanging(value);
					this.SendPropertyChanging();
					this._UTILITY_NAME = value;
					this.SendPropertyChanged("UTILITY_NAME");
					this.OnUTILITY_NAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UTILITY_DESCRIPTION", DbType="NVarChar(50)")]
		public string UTILITY_DESCRIPTION
		{
			get
			{
				return this._UTILITY_DESCRIPTION;
			}
			set
			{
				if ((this._UTILITY_DESCRIPTION != value))
				{
					this.OnUTILITY_DESCRIPTIONChanging(value);
					this.SendPropertyChanging();
					this._UTILITY_DESCRIPTION = value;
					this.SendPropertyChanged("UTILITY_DESCRIPTION");
					this.OnUTILITY_DESCRIPTIONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UTILITY_VALUE", DbType="Int")]
		public System.Nullable<int> UTILITY_VALUE
		{
			get
			{
				return this._UTILITY_VALUE;
			}
			set
			{
				if ((this._UTILITY_VALUE != value))
				{
					this.OnUTILITY_VALUEChanging(value);
					this.SendPropertyChanging();
					this._UTILITY_VALUE = value;
					this.SendPropertyChanged("UTILITY_VALUE");
					this.OnUTILITY_VALUEChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TBL_LICENSE_GENERATE")]
	public partial class TBL_LICENSE_GENERATE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LICENSE_GENERATE_ID;
		
		private int _SCHEDULE_ID;
		
		private System.DateTime _CREATE_ON;
		
		private string _CREATE_BY;
		
		private string _NOTE;
		
		private System.DateTime _LAST_MODIFIED;
		
		private string _FOLLOW_UP_BY;
		
		private bool _IS_ACTIVE;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLICENSE_GENERATE_IDChanging(int value);
    partial void OnLICENSE_GENERATE_IDChanged();
    partial void OnSCHEDULE_IDChanging(int value);
    partial void OnSCHEDULE_IDChanged();
    partial void OnCREATE_ONChanging(System.DateTime value);
    partial void OnCREATE_ONChanged();
    partial void OnCREATE_BYChanging(string value);
    partial void OnCREATE_BYChanged();
    partial void OnNOTEChanging(string value);
    partial void OnNOTEChanged();
    partial void OnLAST_MODIFIEDChanging(System.DateTime value);
    partial void OnLAST_MODIFIEDChanged();
    partial void OnFOLLOW_UP_BYChanging(string value);
    partial void OnFOLLOW_UP_BYChanged();
    partial void OnIS_ACTIVEChanging(bool value);
    partial void OnIS_ACTIVEChanged();
    #endregion
		
		public TBL_LICENSE_GENERATE()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LICENSE_GENERATE_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int LICENSE_GENERATE_ID
		{
			get
			{
				return this._LICENSE_GENERATE_ID;
			}
			set
			{
				if ((this._LICENSE_GENERATE_ID != value))
				{
					this.OnLICENSE_GENERATE_IDChanging(value);
					this.SendPropertyChanging();
					this._LICENSE_GENERATE_ID = value;
					this.SendPropertyChanged("LICENSE_GENERATE_ID");
					this.OnLICENSE_GENERATE_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SCHEDULE_ID", DbType="Int NOT NULL")]
		public int SCHEDULE_ID
		{
			get
			{
				return this._SCHEDULE_ID;
			}
			set
			{
				if ((this._SCHEDULE_ID != value))
				{
					this.OnSCHEDULE_IDChanging(value);
					this.SendPropertyChanging();
					this._SCHEDULE_ID = value;
					this.SendPropertyChanged("SCHEDULE_ID");
					this.OnSCHEDULE_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CREATE_ON", DbType="DateTime NOT NULL")]
		public System.DateTime CREATE_ON
		{
			get
			{
				return this._CREATE_ON;
			}
			set
			{
				if ((this._CREATE_ON != value))
				{
					this.OnCREATE_ONChanging(value);
					this.SendPropertyChanging();
					this._CREATE_ON = value;
					this.SendPropertyChanged("CREATE_ON");
					this.OnCREATE_ONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CREATE_BY", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string CREATE_BY
		{
			get
			{
				return this._CREATE_BY;
			}
			set
			{
				if ((this._CREATE_BY != value))
				{
					this.OnCREATE_BYChanging(value);
					this.SendPropertyChanging();
					this._CREATE_BY = value;
					this.SendPropertyChanged("CREATE_BY");
					this.OnCREATE_BYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NOTE", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string NOTE
		{
			get
			{
				return this._NOTE;
			}
			set
			{
				if ((this._NOTE != value))
				{
					this.OnNOTEChanging(value);
					this.SendPropertyChanging();
					this._NOTE = value;
					this.SendPropertyChanged("NOTE");
					this.OnNOTEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LAST_MODIFIED", DbType="DateTime NOT NULL")]
		public System.DateTime LAST_MODIFIED
		{
			get
			{
				return this._LAST_MODIFIED;
			}
			set
			{
				if ((this._LAST_MODIFIED != value))
				{
					this.OnLAST_MODIFIEDChanging(value);
					this.SendPropertyChanging();
					this._LAST_MODIFIED = value;
					this.SendPropertyChanged("LAST_MODIFIED");
					this.OnLAST_MODIFIEDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FOLLOW_UP_BY", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string FOLLOW_UP_BY
		{
			get
			{
				return this._FOLLOW_UP_BY;
			}
			set
			{
				if ((this._FOLLOW_UP_BY != value))
				{
					this.OnFOLLOW_UP_BYChanging(value);
					this.SendPropertyChanging();
					this._FOLLOW_UP_BY = value;
					this.SendPropertyChanged("FOLLOW_UP_BY");
					this.OnFOLLOW_UP_BYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IS_ACTIVE", DbType="Bit NOT NULL")]
		public bool IS_ACTIVE
		{
			get
			{
				return this._IS_ACTIVE;
			}
			set
			{
				if ((this._IS_ACTIVE != value))
				{
					this.OnIS_ACTIVEChanging(value);
					this.SendPropertyChanging();
					this._IS_ACTIVE = value;
					this.SendPropertyChanged("IS_ACTIVE");
					this.OnIS_ACTIVEChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TBL_LICENSE")]
	public partial class TBL_LICENSE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LICENSE_ID;
		
		private string _ACCOUNT_NO;
		
		private string _ACCOUNT_NAME;
		
		private string _PHONE;
		
		private string _CONTACT_NAME;
		
		private string _ADDRESS;
		
		private string _EMAIL;
		
		private string _PROVINCE_NAME;
		
		private string _DISTRICT_NAME;
		
		private string _COMMUNE_NAME;
		
		private string _VILLAGE_NAME;
		
		private System.DateTime _CREATE_ON;
		
		private bool _IS_ACTIVE;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLICENSE_IDChanging(int value);
    partial void OnLICENSE_IDChanged();
    partial void OnACCOUNT_NOChanging(string value);
    partial void OnACCOUNT_NOChanged();
    partial void OnACCOUNT_NAMEChanging(string value);
    partial void OnACCOUNT_NAMEChanged();
    partial void OnPHONEChanging(string value);
    partial void OnPHONEChanged();
    partial void OnCONTACT_NAMEChanging(string value);
    partial void OnCONTACT_NAMEChanged();
    partial void OnADDRESSChanging(string value);
    partial void OnADDRESSChanged();
    partial void OnEMAILChanging(string value);
    partial void OnEMAILChanged();
    partial void OnPROVINCE_NAMEChanging(string value);
    partial void OnPROVINCE_NAMEChanged();
    partial void OnDISTRICT_NAMEChanging(string value);
    partial void OnDISTRICT_NAMEChanged();
    partial void OnCOMMUNE_NAMEChanging(string value);
    partial void OnCOMMUNE_NAMEChanged();
    partial void OnVILLAGE_NAMEChanging(string value);
    partial void OnVILLAGE_NAMEChanged();
    partial void OnCREATE_ONChanging(System.DateTime value);
    partial void OnCREATE_ONChanged();
    partial void OnIS_ACTIVEChanging(bool value);
    partial void OnIS_ACTIVEChanged();
    #endregion
		
		public TBL_LICENSE()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LICENSE_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int LICENSE_ID
		{
			get
			{
				return this._LICENSE_ID;
			}
			set
			{
				if ((this._LICENSE_ID != value))
				{
					this.OnLICENSE_IDChanging(value);
					this.SendPropertyChanging();
					this._LICENSE_ID = value;
					this.SendPropertyChanged("LICENSE_ID");
					this.OnLICENSE_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ACCOUNT_NO", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string ACCOUNT_NO
		{
			get
			{
				return this._ACCOUNT_NO;
			}
			set
			{
				if ((this._ACCOUNT_NO != value))
				{
					this.OnACCOUNT_NOChanging(value);
					this.SendPropertyChanging();
					this._ACCOUNT_NO = value;
					this.SendPropertyChanged("ACCOUNT_NO");
					this.OnACCOUNT_NOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ACCOUNT_NAME", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string ACCOUNT_NAME
		{
			get
			{
				return this._ACCOUNT_NAME;
			}
			set
			{
				if ((this._ACCOUNT_NAME != value))
				{
					this.OnACCOUNT_NAMEChanging(value);
					this.SendPropertyChanging();
					this._ACCOUNT_NAME = value;
					this.SendPropertyChanged("ACCOUNT_NAME");
					this.OnACCOUNT_NAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PHONE", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string PHONE
		{
			get
			{
				return this._PHONE;
			}
			set
			{
				if ((this._PHONE != value))
				{
					this.OnPHONEChanging(value);
					this.SendPropertyChanging();
					this._PHONE = value;
					this.SendPropertyChanged("PHONE");
					this.OnPHONEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CONTACT_NAME", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string CONTACT_NAME
		{
			get
			{
				return this._CONTACT_NAME;
			}
			set
			{
				if ((this._CONTACT_NAME != value))
				{
					this.OnCONTACT_NAMEChanging(value);
					this.SendPropertyChanging();
					this._CONTACT_NAME = value;
					this.SendPropertyChanged("CONTACT_NAME");
					this.OnCONTACT_NAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ADDRESS", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string ADDRESS
		{
			get
			{
				return this._ADDRESS;
			}
			set
			{
				if ((this._ADDRESS != value))
				{
					this.OnADDRESSChanging(value);
					this.SendPropertyChanging();
					this._ADDRESS = value;
					this.SendPropertyChanged("ADDRESS");
					this.OnADDRESSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMAIL", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string EMAIL
		{
			get
			{
				return this._EMAIL;
			}
			set
			{
				if ((this._EMAIL != value))
				{
					this.OnEMAILChanging(value);
					this.SendPropertyChanging();
					this._EMAIL = value;
					this.SendPropertyChanged("EMAIL");
					this.OnEMAILChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PROVINCE_NAME", DbType="NVarChar(50)")]
		public string PROVINCE_NAME
		{
			get
			{
				return this._PROVINCE_NAME;
			}
			set
			{
				if ((this._PROVINCE_NAME != value))
				{
					this.OnPROVINCE_NAMEChanging(value);
					this.SendPropertyChanging();
					this._PROVINCE_NAME = value;
					this.SendPropertyChanged("PROVINCE_NAME");
					this.OnPROVINCE_NAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DISTRICT_NAME", DbType="NVarChar(50)")]
		public string DISTRICT_NAME
		{
			get
			{
				return this._DISTRICT_NAME;
			}
			set
			{
				if ((this._DISTRICT_NAME != value))
				{
					this.OnDISTRICT_NAMEChanging(value);
					this.SendPropertyChanging();
					this._DISTRICT_NAME = value;
					this.SendPropertyChanged("DISTRICT_NAME");
					this.OnDISTRICT_NAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_COMMUNE_NAME", DbType="NVarChar(50)")]
		public string COMMUNE_NAME
		{
			get
			{
				return this._COMMUNE_NAME;
			}
			set
			{
				if ((this._COMMUNE_NAME != value))
				{
					this.OnCOMMUNE_NAMEChanging(value);
					this.SendPropertyChanging();
					this._COMMUNE_NAME = value;
					this.SendPropertyChanged("COMMUNE_NAME");
					this.OnCOMMUNE_NAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VILLAGE_NAME", DbType="NVarChar(50)")]
		public string VILLAGE_NAME
		{
			get
			{
				return this._VILLAGE_NAME;
			}
			set
			{
				if ((this._VILLAGE_NAME != value))
				{
					this.OnVILLAGE_NAMEChanging(value);
					this.SendPropertyChanging();
					this._VILLAGE_NAME = value;
					this.SendPropertyChanged("VILLAGE_NAME");
					this.OnVILLAGE_NAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CREATE_ON", DbType="DateTime NOT NULL")]
		public System.DateTime CREATE_ON
		{
			get
			{
				return this._CREATE_ON;
			}
			set
			{
				if ((this._CREATE_ON != value))
				{
					this.OnCREATE_ONChanging(value);
					this.SendPropertyChanging();
					this._CREATE_ON = value;
					this.SendPropertyChanged("CREATE_ON");
					this.OnCREATE_ONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IS_ACTIVE", DbType="Bit NOT NULL")]
		public bool IS_ACTIVE
		{
			get
			{
				return this._IS_ACTIVE;
			}
			set
			{
				if ((this._IS_ACTIVE != value))
				{
					this.OnIS_ACTIVEChanging(value);
					this.SendPropertyChanging();
					this._IS_ACTIVE = value;
					this.SendPropertyChanged("IS_ACTIVE");
					this.OnIS_ACTIVEChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	public partial class RUN_SHOW_SEASON_AVAILABLEResult
	{
		
		private int _SEASON_ID;
		
		private string _SEASON_NAME;
		
		public RUN_SHOW_SEASON_AVAILABLEResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SEASON_ID", DbType="Int NOT NULL")]
		public int SEASON_ID
		{
			get
			{
				return this._SEASON_ID;
			}
			set
			{
				if ((this._SEASON_ID != value))
				{
					this._SEASON_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SEASON_NAME", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string SEASON_NAME
		{
			get
			{
				return this._SEASON_NAME;
			}
			set
			{
				if ((this._SEASON_NAME != value))
				{
					this._SEASON_NAME = value;
				}
			}
		}
	}
	
	public partial class RUN_SHOW_ALL_SEASONResult
	{
		
		private int _SEASON_ID;
		
		private string _SEASON_NAME;
		
		private string _NOTE;
		
		private int _TOTAL_LICENSE;
		
		private int _REMAIN_LICENSE;
		
		public RUN_SHOW_ALL_SEASONResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SEASON_ID", DbType="Int NOT NULL")]
		public int SEASON_ID
		{
			get
			{
				return this._SEASON_ID;
			}
			set
			{
				if ((this._SEASON_ID != value))
				{
					this._SEASON_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SEASON_NAME", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string SEASON_NAME
		{
			get
			{
				return this._SEASON_NAME;
			}
			set
			{
				if ((this._SEASON_NAME != value))
				{
					this._SEASON_NAME = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NOTE", DbType="NVarChar(250)")]
		public string NOTE
		{
			get
			{
				return this._NOTE;
			}
			set
			{
				if ((this._NOTE != value))
				{
					this._NOTE = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TOTAL_LICENSE", DbType="Int NOT NULL")]
		public int TOTAL_LICENSE
		{
			get
			{
				return this._TOTAL_LICENSE;
			}
			set
			{
				if ((this._TOTAL_LICENSE != value))
				{
					this._TOTAL_LICENSE = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_REMAIN_LICENSE", DbType="Int NOT NULL")]
		public int REMAIN_LICENSE
		{
			get
			{
				return this._REMAIN_LICENSE;
			}
			set
			{
				if ((this._REMAIN_LICENSE != value))
				{
					this._REMAIN_LICENSE = value;
				}
			}
		}
	}
	
	public partial class RUN_SHOW_NUMBER_AVAILABLEResult
	{
		
		private string _REMAIN_LICENSE;
		
		public RUN_SHOW_NUMBER_AVAILABLEResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_REMAIN_LICENSE", DbType="NVarChar(35)")]
		public string REMAIN_LICENSE
		{
			get
			{
				return this._REMAIN_LICENSE;
			}
			set
			{
				if ((this._REMAIN_LICENSE != value))
				{
					this._REMAIN_LICENSE = value;
				}
			}
		}
	}
	
	public partial class RUN_SHOW_HISTORY_SURVEYResult
	{
		
		private System.Nullable<long> _ROW_ID;
		
		private System.DateTime _CREATE_ON;
		
		private string _FOLLOW_UP_BY;
		
		private string _CREATE_BY;
		
		private string _TOTAL_LICENSE;
		
		public RUN_SHOW_HISTORY_SURVEYResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ROW_ID", DbType="BigInt")]
		public System.Nullable<long> ROW_ID
		{
			get
			{
				return this._ROW_ID;
			}
			set
			{
				if ((this._ROW_ID != value))
				{
					this._ROW_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CREATE_ON", DbType="DateTime NOT NULL")]
		public System.DateTime CREATE_ON
		{
			get
			{
				return this._CREATE_ON;
			}
			set
			{
				if ((this._CREATE_ON != value))
				{
					this._CREATE_ON = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FOLLOW_UP_BY", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string FOLLOW_UP_BY
		{
			get
			{
				return this._FOLLOW_UP_BY;
			}
			set
			{
				if ((this._FOLLOW_UP_BY != value))
				{
					this._FOLLOW_UP_BY = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CREATE_BY", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string CREATE_BY
		{
			get
			{
				return this._CREATE_BY;
			}
			set
			{
				if ((this._CREATE_BY != value))
				{
					this._CREATE_BY = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TOTAL_LICENSE", DbType="NVarChar(34)")]
		public string TOTAL_LICENSE
		{
			get
			{
				return this._TOTAL_LICENSE;
			}
			set
			{
				if ((this._TOTAL_LICENSE != value))
				{
					this._TOTAL_LICENSE = value;
				}
			}
		}
	}
	
	public partial class RUN_SHOW_GENERATE_BY_CREATE_ONResult
	{
		
		private int _LICENSE_GENERATE_ID;
		
		private int _SCHEDULE_ID;
		
		private System.DateTime _CREATE_ON;
		
		private string _CREATE_BY;
		
		private string _FOLLOW_UP_BY;
		
		private string _NOTE;
		
		private string _ACCOUNT_NO;
		
		private string _ACCOUNT_NAME;
		
		private string _CONTACT_NAME;
		
		private bool _IS_ACTIVE;
		
		private int _COLOR_ID;
		
		public RUN_SHOW_GENERATE_BY_CREATE_ONResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LICENSE_GENERATE_ID", DbType="Int NOT NULL")]
		public int LICENSE_GENERATE_ID
		{
			get
			{
				return this._LICENSE_GENERATE_ID;
			}
			set
			{
				if ((this._LICENSE_GENERATE_ID != value))
				{
					this._LICENSE_GENERATE_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SCHEDULE_ID", DbType="Int NOT NULL")]
		public int SCHEDULE_ID
		{
			get
			{
				return this._SCHEDULE_ID;
			}
			set
			{
				if ((this._SCHEDULE_ID != value))
				{
					this._SCHEDULE_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CREATE_ON", DbType="DateTime NOT NULL")]
		public System.DateTime CREATE_ON
		{
			get
			{
				return this._CREATE_ON;
			}
			set
			{
				if ((this._CREATE_ON != value))
				{
					this._CREATE_ON = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CREATE_BY", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string CREATE_BY
		{
			get
			{
				return this._CREATE_BY;
			}
			set
			{
				if ((this._CREATE_BY != value))
				{
					this._CREATE_BY = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FOLLOW_UP_BY", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string FOLLOW_UP_BY
		{
			get
			{
				return this._FOLLOW_UP_BY;
			}
			set
			{
				if ((this._FOLLOW_UP_BY != value))
				{
					this._FOLLOW_UP_BY = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NOTE", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string NOTE
		{
			get
			{
				return this._NOTE;
			}
			set
			{
				if ((this._NOTE != value))
				{
					this._NOTE = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ACCOUNT_NO", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string ACCOUNT_NO
		{
			get
			{
				return this._ACCOUNT_NO;
			}
			set
			{
				if ((this._ACCOUNT_NO != value))
				{
					this._ACCOUNT_NO = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ACCOUNT_NAME", DbType="NVarChar(308) NOT NULL", CanBeNull=false)]
		public string ACCOUNT_NAME
		{
			get
			{
				return this._ACCOUNT_NAME;
			}
			set
			{
				if ((this._ACCOUNT_NAME != value))
				{
					this._ACCOUNT_NAME = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CONTACT_NAME", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string CONTACT_NAME
		{
			get
			{
				return this._CONTACT_NAME;
			}
			set
			{
				if ((this._CONTACT_NAME != value))
				{
					this._CONTACT_NAME = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IS_ACTIVE", DbType="Bit NOT NULL")]
		public bool IS_ACTIVE
		{
			get
			{
				return this._IS_ACTIVE;
			}
			set
			{
				if ((this._IS_ACTIVE != value))
				{
					this._IS_ACTIVE = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_COLOR_ID", DbType="Int NOT NULL")]
		public int COLOR_ID
		{
			get
			{
				return this._COLOR_ID;
			}
			set
			{
				if ((this._COLOR_ID != value))
				{
					this._COLOR_ID = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
